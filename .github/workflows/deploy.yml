name: Deploy Docker Compose App to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Docker Image (cache enabled)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/cartlow-python-app:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/cartlow-python-app:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/cartlow-python-app:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/cartlow-python-app:buildcache,mode=max

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Clone or pull latest code
          if [ ! -d "/home/ubuntu/cartlow-python-project-prc/.git" ]; then
            echo "📦 Cloning project repo..."
            git clone https://github.com/Uzair-DeVops/cartlow-python-project-prc.git 
          fi
          echo "📁 Navigating to project directory..."
          cd /home/ubuntu/cartlow-python-project-prc

          echo "📥 Pulling latest code..."
          git pull origin main

          echo "📝 Updating .env file..."
          cat > .env << EOF
          HOSTED_MYSQL_URL=${{ secrets.HOSTED_MYSQL_URL }}
          HOSTED_CLICKHOUSE_URL=${{ secrets.HOSTED_CLICKHOUSE_URL }}
          SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          PORT=${{ secrets.PORT }}
          EOF

          echo "🐳 Pulling latest image..."
          sudo docker-compose pull

          echo "🚀 Restarting containers..."
          sudo docker-compose up -d --no-deps --remove-orphans

          echo "✅ Deployment complete"
